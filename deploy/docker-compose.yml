version: '3.8'

services:
  app:
    image: ghcr.io/visiquate/birthdays-to-slack:latest
    container_name: birthdays-to-slack
    # No ports exposed - access via Cloudflare tunnel
    environment:
      # Project identification
      - PROJECT_NAME=birthdays-to-slack
      - SERVICE_NAME=birthdays-to-slack
      - ENVIRONMENT=${ENVIRONMENT:-production}
      # Build information
      - GIT_COMMIT=${GIT_COMMIT:-unknown}
      - BUILD_DATE=${BUILD_DATE:-unknown}
      - VERSION=${VERSION:-1.0.0}
      # Service configuration
      - LDAP_SERVER=ldaps://ldap.google.com
      - SEARCH_BASE=ou=Users,dc=visiquate,dc=com
      - ICS_URL=${ICS_URL}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - FLASK_ENV=production
      - PORT=5000
      - SLACK_NOTIFICATIONS_ENABLED=${SLACK_NOTIFICATIONS_ENABLED:-false}
    env_file:
      - .env
    volumes:
      - ./certs:/app/certs:ro
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app_network
    labels:
      - "com.centurylinklabs.watchtower.scope=birthdays-to-slack"

  watchtower:
    image: containrrr/watchtower
    container_name: birthdays-to-slack-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_HTTP_API_UPDATE=true
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_TOKEN}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_SCOPE=birthdays-to-slack
      - WATCHTOWER_HTTP_API_METRICS=true
    # No ports exposed to host - access via Cloudflare tunnel
    command: --interval 30 --scope birthdays-to-slack
    networks:
      - app_network
    labels:
      - "com.centurylinklabs.watchtower.scope=birthdays-to-slack"

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: birthdays-to-slack-cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  birthdays-data:
    driver: local