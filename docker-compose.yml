version: '3.8'

services:
  birthdays-to-slack:
    image: ghcr.io/visiquate/birthdays-to-slack:latest
    container_name: birthdays-to-slack
    ports:
      - "5002:5000"
    environment:
      # Project identification
      - PROJECT_NAME=birthdays-to-slack
      - SERVICE_NAME=birthdays-to-slack
      - ENVIRONMENT=${ENVIRONMENT:-production}
      # Build information
      - GIT_COMMIT=${GIT_COMMIT:-unknown}
      - BUILD_DATE=${BUILD_DATE:-unknown}
      - VERSION=${VERSION:-1.0.0}
      # Service configuration
      - LDAP_SERVER=ldaps://ldap.google.com
      - SEARCH_BASE=ou=Users,dc=visiquate,dc=com
      - ICS_URL=${ICS_URL}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - FLASK_ENV=production
      - PORT=5000
      - SLACK_NOTIFICATIONS_ENABLED=${SLACK_NOTIFICATIONS_ENABLED:-false}
      - BIRTHDAY_LOOK_AHEAD_DAYS=${BIRTHDAY_LOOK_AHEAD_DAYS:-30}
    env_file:
      - .env
    volumes:
      - ./certs:/app/certs:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.centurylinklabs.watchtower.scope=birthdays-to-slack"
      - "com.visiquate.service.type=backend"
      - "com.visiquate.service.architecture=monolithic"
      - "com.visiquate.service.state=stateful"
      - "com.visiquate.service.category=automation"
      - "com.visiquate.service.frontend=true"
      - "com.visiquate.service.backend=true"
      - "com.visiquate.service.api=true"
      - "com.visiquate.service.scheduled=true"
      - "com.visiquate.service.description=Automated birthday notification system with AI-generated messages"

  watchtower:
    image: containrrr/watchtower
    container_name: birthdays-to-slack-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_SCOPE=birthdays-to-slack
      - REPO_USER=${REPO_USER}
      - REPO_PASS=${REPO_PASS}
    # Watchtower API disabled - no ports exposed
    command: --interval 30 --scope birthdays-to-slack
    labels:
      - "com.centurylinklabs.watchtower.scope=birthdays-to-slack"

  # Development service
  birthdays-to-slack-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: birthdays-to-slack-dev
    ports:
      - "5001:5000"
    environment:
      # Project identification
      - PROJECT_NAME=birthdays-to-slack
      - SERVICE_NAME=birthdays-to-slack-dev
      - ENVIRONMENT=development
      # Build information
      - GIT_COMMIT=development
      - BUILD_DATE=development
      - VERSION=development
      # Service configuration
      - LDAP_SERVER=ldaps://ldap.google.com
      - SEARCH_BASE=ou=Users,dc=visiquate,dc=com
      - ICS_URL=${ICS_URL}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - FLASK_ENV=development
      - PORT=5000
      - SLACK_NOTIFICATIONS_ENABLED=${SLACK_NOTIFICATIONS_ENABLED:-false}
      - BIRTHDAY_LOOK_AHEAD_DAYS=${BIRTHDAY_LOOK_AHEAD_DAYS:-30}
    env_file:
      - .env
    volumes:
      - ./certs:/app/certs:ro
      - .:/app  # Mount source code for development
    restart: "no"
    profiles:
      - dev

  # Service for running tests
  test:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m pytest tests/ -v --cov=birthday_bot --cov-report=xml --cov-report=html
    environment:
      - LDAP_SERVER=ldaps://ldap.google.com
      - SEARCH_BASE=ou=Users,dc=visiquate,dc=com
    env_file:
      - .env
    volumes:
      - ./certs:/app/certs:ro
    profiles:
      - test